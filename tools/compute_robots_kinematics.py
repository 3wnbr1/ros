#!/usr/bin/env python3


"""Compute robot kinematics parameters to be inserted into YAMLs templates."""


from math import pi

import yaml


def get_footprint(length=0.20, width=0.15, wheels_excentration=0):
    """Get footprint corresponding to robot specified dimensions."""
    l, w, x = length / 2, width / 2, wheels_excentration
    f = [
        [-l + x, -w],
        [-l + x, w],
        [l + x, w],
        [l + x, -w],
    ]
    return str(f)


def compute_speeds(config: dict):
    """Compute kinemtics limits for each robot."""
    step = config.get("max_steps_frequency") / config.get("speedramp_resolution")
    steps_per_turn = config.get("steps_per_turn") * config.get("microsteps")
    meters_per_turn = 2 * pi * config.get("wheel_radius")
    max_turns_per_sec = config.get("max_steps_frequency") / steps_per_turn
    max_linear_vel = max_turns_per_sec * meters_per_turn
    max_linear_vel = round(max_linear_vel, 4)
    config["max_vel_x"] = max_linear_vel
    config["max_vel_x_backwards"] = max_linear_vel
    return config


globals = {
    "use_sim_time": False,
}

asterix = {
    "wheel_separation": 0.2245,
    "wheel_radius": 0.037,
    "footprint": get_footprint(length=0.2, width=0.25),
    "max_vel_x_nominal": 2.0,
    "max_vel_x_accurate": 0.1,
    "max_vel_theta": 1.5,
    "max_vel_theta_accurate": 0.5,
    "acc_lim_x": 0.5,
    "acc_lim_theta": 1.0,
}

obelix = {
    "wheel_separation": 0.32,
    "wheel_radius": 0.037,
    "footprint": get_footprint(length=0.18, width=0.315),
    "max_vel_x_nominal": 2.0,
    "max_vel_x_accurate": 0.1,
    "max_vel_theta": 3.1,
    "max_vel_theta_accurate": 0.5,
    "acc_lim_x": 0.4,
    "acc_lim_theta": 1.0,
}

obelix.update(globals)
# obelix = compute_speeds(obelix)
asterix.update(globals)
# asterix = compute_speeds(asterix)

header = "# This file is autogenerated by tools/compute_robots_kinematics.py DO NOT EDIT\n---\n"

with open("obelix.vars", "w") as f:
    f.write(header + yaml.dump(obelix))

with open("asterix.vars", "w") as f:
    f.write(header + yaml.dump(asterix))
