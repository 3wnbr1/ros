name: colcon build

on: [push]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup ROS2 environment
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y curl gnupg2 lsb-release && \
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
          curl -s https://cyberbotics.com/Cyberbotics.asc | sudo apt-key add -
          sudo mkdir -p /etc/apt-get/sources.list.d/ && \
          sudo apt-add-repository 'deb https://cyberbotics.com/debian/ binary-amd64/' && \
          sudo sh -c 'echo "deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list' && \
          sudo DEBIAN_FRONTEND=noninteractive apt-get update && sudo apt-get install -y ros-eloquent-ros-base python3-colcon-common-extensions \
          libopencv-dev libboost-dev libboost-python-dev ros-eloquent-yaml-cpp-vendor ros-eloquent-cv-bridge ros-eloquent-image-transport libi2c-dev i2c-tools \
          libgraphicsmagick++1-dev lcov libsdl1.2-dev libsdl-image1.2-dev ros-eloquent-test-msgs ros-eloquent-gazebo-ros-pkgs \
          ros-eloquent-laser-geometry ros-eloquent-map-msgs ros-eloquent-rviz2 ros-eloquent-angles ros-eloquent-xacro webots

      - name: Build navigation2 from source
        run: |
          mkdir -p ~/ros_ws/src
          source /opt/ros/eloquent/setup.bash
          git clone -b master https://github.com/BehaviorTree/BehaviorTree.CPP.git ~/ros_ws/src
          git clone -b master https://github.com/ros-planning/navigation2.git ~/ros_ws/src
          cd ~/ros_ws && colcon build --symlink-install

      - name: Build packages
        run: source /opt/ros/eloquent/setup.bash && source ~/ros_ws/install/setup.bash && WEBOTS_HOME=/usr/local/webots ./setup.bash simulation

      - name: Run simulation
        run: source install/setup.bash && WEBOTS_HOME=/usr/local/webots ros2 launch titan titan.py
        timeout-minutes: 6  # Timeout the process if it fails to kill itself
